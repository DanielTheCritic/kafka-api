version: "3"
services:
  kafka1:
    container_name: kafka1
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes

  kowl:
    image: quay.io/cloudhut/kowl:latest
    container_name: kowl
    restart: always
    ports:
      - "3100:3100"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERS=localhost:9092

  dev:
    container_name: kafka-api-dev
    image: kafka-api-dev:1.0.0
    build:
        context: .
        target: development
        dockerfile: ./Dockerfile
    command: npm run start:debug
    ports:
        - 3000:3000
        - 9229:9229
    volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
    restart: unless-stopped
  prod:
    container_name: kafka-api
    image: kafka-api:1.0.0
    build:
        context: .
        target: production
        dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
        - 3000:3000
        - 9229:9229
    volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
    restart: unless-stopped
      